{
  "address": "0x94141062B831aBF6EfCD08FFa7E81d9D33e8AD0C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3eea7639761167ec77fa6caf5012cb379aba5ab532202fa27fbcd9aad989e6a7",
  "receipt": {
    "to": null,
    "from": "0x75c10cD89B9adD3B0119E8C2DbB8a52Ff3703B8e",
    "contractAddress": "0x94141062B831aBF6EfCD08FFa7E81d9D33e8AD0C",
    "transactionIndex": 37,
    "gasUsed": "995613",
    "logsBloom": "0x
    "blockHash": "0xbaa0064661c63d6ec1a39a7602fb7cdb0d22edb60d675ab0a2f01bd8694f1ebb",
    "transactionHash": "0x3eea7639761167ec77fa6caf5012cb379aba5ab532202fa27fbcd9aad989e6a7",
    "logs": [],
    "blockNumber": 4329967,
    "cumulativeGasUsed": "8048480",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "9702de68583d17354e58a70be3c8d2a2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Felipe Lima\",\"details\":\"This implements price feeds as a library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds the contract\"}},\"notice\":\"This contract is a demo\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Felipe Lima\\n * @notice This contract is a demo\\n * @dev This implements price feeds as a library\\n */\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] public s_funders;\\n\\n  // Could we make this constant?  /* hint: no! We should make it immutable! */\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == owner);\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  /**\\n   * @notice This function funds the contract\\n   * @dev This implements price feeds as our library\\n   */\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      \\\"You need to spend more ETH!\\\"\\n    );\\n    // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  function getVersion() public view returns (uint256) {\\n    // ETH/USD price feed address of Sepolia Network.\\n    AggregatorV3Interface $priceFeed = AggregatorV3Interface(\\n      0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    );\\n    return $priceFeed.version();\\n  }\\n\\n  function withdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n\\n    s_funders = new address[](0);\\n\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(\\n    address funder\\n  ) public view returns (uint256) {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n\\n  // function withdraw() public onlyOwner {\\n  //   for (\\n  //     uint256 funderIndex = 0;\\n  //     funderIndex < s_funders.length;\\n  //     funderIndex++\\n  //   ) {\\n  //     address funder = s_funders[funderIndex];\\n  //     s_addressToAmountFunded[funder] = 0;\\n  //   }\\n\\n  //   s_funders = new address[](0);\\n  //   // // transfer\\n  //   // payable(msg.sender).transfer(address(this).balance);\\n  //   // // send\\n  //   // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n  //   // require(sendSuccess, \\\"Send failed\\\");\\n  //   // call\\n  //   (bool callSuccess, ) = payable(msg.sender).call{\\n  //     value: address(this).balance\\n  //   }(\\\"\\\");\\n  //   require(callSuccess, \\\"Call failed\\\");\\n  // }\\n\\n  // Explainer from: https://solidity-by-example.org/fallback/\\n  // Ether is sent to contract\\n  //      is msg.data empty?\\n  //          /   \\\\\\n  //         yes  no\\n  //         /     \\\\\\n  //    receive()?  fallback()\\n  //     /   \\\\\\n  //   yes   no\\n  //  /        \\\\\\n  //receive()  fallback()\\n}\\n\",\"keccak256\":\"0xf04bd1c0c105d762fa599a06b47a223e9fcf6392d9ad46f4a073e80ba5e80261\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n  // We could make this public, but then we'd have to deploy it\\n  function getPrice(\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n    // or (Both will do the same thing)\\n    // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n  }\\n\\n  // 1000000000\\n  function getConversionRate(\\n    uint256 ethAmount,\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // or (Both will do the same thing)\\n    // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n    // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xb541cf4051ab15d523ddc36e8cc04be207ae4b2784d8ab42280f516c465cab66\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200121738038062001217833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61109f620001786000396000818161043c015261072e015261109f6000f3fe60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a59214610152578063893d20e81461017d5780639e87a5cd146101a8578063b60d4288146101d3578063d7b4750c146101dd57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b57806354861af71461011557610099565b366100995761009761021a565b005b6100a161021a565b005b3480156100af57600080fd5b506100ca60048036038101906100c591906109aa565b610354565b6040516100d791906109f0565b60405180910390f35b3480156100ec57600080fd5b506100f561039c565b60405161010291906109f0565b60405180910390f35b61011361043a565b005b34801561012157600080fd5b5061013c60048036038101906101379190610a37565b6106de565b6040516101499190610a73565b60405180910390f35b34801561015e57600080fd5b5061016761071d565b60405161017491906109f0565b60405180910390f35b34801561018957600080fd5b5061019261072a565b60405161019f9190610a73565b60405180910390f35b3480156101b457600080fd5b506101bd610752565b6040516101ca9190610aed565b60405180910390f35b6101db61021a565b005b3480156101e957600080fd5b5061020460048036038101906101ff9190610a37565b61077c565b6040516102119190610a73565b60405180910390f35b6802b5e3af16b1880000610259600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346107c490919063ffffffff16565b101561029a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029190610b65565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e89190610bb4565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103fc57600080fd5b505afa158015610410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104349190610c1f565b91505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104bf576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561054357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104f9575b5050505050905060005b81518110156105cd57600082828151811061056b5761056a610c4c565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105c590610c7b565b91505061054d565b50600067ffffffffffffffff8111156105e9576105e8610cc4565b5b6040519080825280602002602001820160405280156106175781602001602082028036833780820191505090505b506001908051906020019061062d9291906108a0565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161065490610d24565b60006040518083038185875af1925050503d8060008114610691576040519150601f19603f3d011682016040523d82523d6000602084013e610696565b606091505b50509050806106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d190610d85565b60405180910390fd5b5050565b600181815481106106ee57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061079257610791610c4c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806107d083610800565b90506000670de0b6b3a764000085836107e99190610da5565b6107f39190610e2e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561084957600080fd5b505afa15801561085d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108819190610ed7565b5050509150506402540be400816108989190610f52565b915050919050565b828054828255906000526020600020908101928215610919579160200282015b828111156109185782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906108c0565b5b509050610926919061092a565b5090565b5b8082111561094357600081600090555060010161092b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109778261094c565b9050919050565b6109878161096c565b811461099257600080fd5b50565b6000813590506109a48161097e565b92915050565b6000602082840312156109c0576109bf610947565b5b60006109ce84828501610995565b91505092915050565b6000819050919050565b6109ea816109d7565b82525050565b6000602082019050610a0560008301846109e1565b92915050565b610a14816109d7565b8114610a1f57600080fd5b50565b600081359050610a3181610a0b565b92915050565b600060208284031215610a4d57610a4c610947565b5b6000610a5b84828501610a22565b91505092915050565b610a6d8161096c565b82525050565b6000602082019050610a886000830184610a64565b92915050565b6000819050919050565b6000610ab3610aae610aa98461094c565b610a8e565b61094c565b9050919050565b6000610ac582610a98565b9050919050565b6000610ad782610aba565b9050919050565b610ae781610acc565b82525050565b6000602082019050610b026000830184610ade565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b4f601b83610b08565b9150610b5a82610b19565b602082019050919050565b60006020820190508181036000830152610b7e81610b42565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bbf826109d7565b9150610bca836109d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bff57610bfe610b85565b5b828201905092915050565b600081519050610c1981610a0b565b92915050565b600060208284031215610c3557610c34610947565b5b6000610c4384828501610c0a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c86826109d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cb957610cb8610b85565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d0e600083610cf3565b9150610d1982610cfe565b600082019050919050565b6000610d2f82610d01565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d6f600b83610b08565b9150610d7a82610d39565b602082019050919050565b60006020820190508181036000830152610d9e81610d62565b9050919050565b6000610db0826109d7565b9150610dbb836109d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610df457610df3610b85565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e39826109d7565b9150610e44836109d7565b925082610e5457610e53610dff565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7e81610e5f565b8114610e8957600080fd5b50565b600081519050610e9b81610e75565b92915050565b6000819050919050565b610eb481610ea1565b8114610ebf57600080fd5b50565b600081519050610ed181610eab565b92915050565b600080600080600060a08688031215610ef357610ef2610947565b5b6000610f0188828901610e8c565b9550506020610f1288828901610ec2565b9450506040610f2388828901610c0a565b9350506060610f3488828901610c0a565b9250506080610f4588828901610e8c565b9150509295509295909350565b6000610f5d82610ea1565b9150610f6883610ea1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fa757610fa6610b85565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fe457610fe3610b85565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561102157611020610b85565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561105e5761105d610b85565b5b82820290509291505056fea2646970667358221220be049a8ade4f8cef59c95894191d175a3b25d0abe8ffc40e5fe066a3e689497564736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a59214610152578063893d20e81461017d5780639e87a5cd146101a8578063b60d4288146101d3578063d7b4750c146101dd57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b57806354861af71461011557610099565b366100995761009761021a565b005b6100a161021a565b005b3480156100af57600080fd5b506100ca60048036038101906100c591906109aa565b610354565b6040516100d791906109f0565b60405180910390f35b3480156100ec57600080fd5b506100f561039c565b60405161010291906109f0565b60405180910390f35b61011361043a565b005b34801561012157600080fd5b5061013c60048036038101906101379190610a37565b6106de565b6040516101499190610a73565b60405180910390f35b34801561015e57600080fd5b5061016761071d565b60405161017491906109f0565b60405180910390f35b34801561018957600080fd5b5061019261072a565b60405161019f9190610a73565b60405180910390f35b3480156101b457600080fd5b506101bd610752565b6040516101ca9190610aed565b60405180910390f35b6101db61021a565b005b3480156101e957600080fd5b5061020460048036038101906101ff9190610a37565b61077c565b6040516102119190610a73565b60405180910390f35b6802b5e3af16b1880000610259600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346107c490919063ffffffff16565b101561029a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029190610b65565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e89190610bb4565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103fc57600080fd5b505afa158015610410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104349190610c1f565b91505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104bf576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561054357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104f9575b5050505050905060005b81518110156105cd57600082828151811061056b5761056a610c4c565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105c590610c7b565b91505061054d565b50600067ffffffffffffffff8111156105e9576105e8610cc4565b5b6040519080825280602002602001820160405280156106175781602001602082028036833780820191505090505b506001908051906020019061062d9291906108a0565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161065490610d24565b60006040518083038185875af1925050503d8060008114610691576040519150601f19603f3d011682016040523d82523d6000602084013e610696565b606091505b50509050806106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d190610d85565b60405180910390fd5b5050565b600181815481106106ee57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061079257610791610c4c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806107d083610800565b90506000670de0b6b3a764000085836107e99190610da5565b6107f39190610e2e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561084957600080fd5b505afa15801561085d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108819190610ed7565b5050509150506402540be400816108989190610f52565b915050919050565b828054828255906000526020600020908101928215610919579160200282015b828111156109185782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906108c0565b5b509050610926919061092a565b5090565b5b8082111561094357600081600090555060010161092b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109778261094c565b9050919050565b6109878161096c565b811461099257600080fd5b50565b6000813590506109a48161097e565b92915050565b6000602082840312156109c0576109bf610947565b5b60006109ce84828501610995565b91505092915050565b6000819050919050565b6109ea816109d7565b82525050565b6000602082019050610a0560008301846109e1565b92915050565b610a14816109d7565b8114610a1f57600080fd5b50565b600081359050610a3181610a0b565b92915050565b600060208284031215610a4d57610a4c610947565b5b6000610a5b84828501610a22565b91505092915050565b610a6d8161096c565b82525050565b6000602082019050610a886000830184610a64565b92915050565b6000819050919050565b6000610ab3610aae610aa98461094c565b610a8e565b61094c565b9050919050565b6000610ac582610a98565b9050919050565b6000610ad782610aba565b9050919050565b610ae781610acc565b82525050565b6000602082019050610b026000830184610ade565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b4f601b83610b08565b9150610b5a82610b19565b602082019050919050565b60006020820190508181036000830152610b7e81610b42565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bbf826109d7565b9150610bca836109d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bff57610bfe610b85565b5b828201905092915050565b600081519050610c1981610a0b565b92915050565b600060208284031215610c3557610c34610947565b5b6000610c4384828501610c0a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c86826109d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cb957610cb8610b85565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d0e600083610cf3565b9150610d1982610cfe565b600082019050919050565b6000610d2f82610d01565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d6f600b83610b08565b9150610d7a82610d39565b602082019050919050565b60006020820190508181036000830152610d9e81610d62565b9050919050565b6000610db0826109d7565b9150610dbb836109d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610df457610df3610b85565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e39826109d7565b9150610e44836109d7565b925082610e5457610e53610dff565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7e81610e5f565b8114610e8957600080fd5b50565b600081519050610e9b81610e75565b92915050565b6000819050919050565b610eb481610ea1565b8114610ebf57600080fd5b50565b600081519050610ed181610eab565b92915050565b600080600080600060a08688031215610ef357610ef2610947565b5b6000610f0188828901610e8c565b9550506020610f1288828901610ec2565b9450506040610f2388828901610c0a565b9350506060610f3488828901610c0a565b9250506080610f4588828901610e8c565b9150509295509295909350565b6000610f5d82610ea1565b9150610f6883610ea1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fa757610fa6610b85565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fe457610fe3610b85565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561102157611020610b85565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561105e5761105d610b85565b5b82820290509291505056fea2646970667358221220be049a8ade4f8cef59c95894191d175a3b25d0abe8ffc40e5fe066a3e689497564736f6c63430008080033",
  "devdoc": {
    "author": "Felipe Lima",
    "details": "This implements price feeds as a library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds the contract"
      }
    },
    "notice": "This contract is a demo",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}